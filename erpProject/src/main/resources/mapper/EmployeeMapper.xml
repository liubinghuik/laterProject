<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Employee" >
    <id column="personID" property="personid" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="englishName" property="englishname" jdbcType="VARCHAR" />
    <result column="departID" property="departid" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="idCard" property="idcard" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="duty" property="duty" jdbcType="VARCHAR" />
    <result column="postCode" property="postcode" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="entryDate" property="entrydate" jdbcType="DATE" />
    <result column="regularizationdate" property="regularizationdate" jdbcType="DATE" />
    <result column="dimissiondate" property="dimissiondate" jdbcType="DATE" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="custom1" property="custom1" jdbcType="VARCHAR" />
    <result column="custom2" property="custom2" jdbcType="VARCHAR" />
    <result column="custom3" property="custom3" jdbcType="VARCHAR" />
    <result column="custom4" property="custom4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    personID, name, pwd, englishName, departID, sex, idCard, birthday, duty, postCode, 
    phone, entryDate, regularizationdate, dimissiondate, address, state, remark, custom1, 
    custom2, custom3, custom4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.EmployeeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where personID = #{personid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from employee
    where personID = #{personid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.EmployeeExample" >
    delete from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Employee" >
    insert into employee (personID, name, pwd, 
      englishName, departID, sex, 
      idCard, birthday, duty, 
      postCode, phone, entryDate, 
      regularizationdate, dimissiondate, address, 
      state, remark, custom1, 
      custom2, custom3, custom4
      )
    values (#{personid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{englishname,jdbcType=VARCHAR}, #{departid,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{idcard,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{duty,jdbcType=VARCHAR}, 
      #{postcode,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{entrydate,jdbcType=DATE}, 
      #{regularizationdate,jdbcType=DATE}, #{dimissiondate,jdbcType=DATE}, #{address,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{custom1,jdbcType=VARCHAR}, 
      #{custom2,jdbcType=VARCHAR}, #{custom3,jdbcType=VARCHAR}, #{custom4,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personid != null" >
        personID,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="englishname != null" >
        englishName,
      </if>
      <if test="departid != null" >
        departID,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="idcard != null" >
        idCard,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="duty != null" >
        duty,
      </if>
      <if test="postcode != null" >
        postCode,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="entrydate != null" >
        entryDate,
      </if>
      <if test="regularizationdate != null" >
        regularizationdate,
      </if>
      <if test="dimissiondate != null" >
        dimissiondate,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="custom1 != null" >
        custom1,
      </if>
      <if test="custom2 != null" >
        custom2,
      </if>
      <if test="custom3 != null" >
        custom3,
      </if>
      <if test="custom4 != null" >
        custom4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personid != null" >
        #{personid,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="englishname != null" >
        #{englishname,jdbcType=VARCHAR},
      </if>
      <if test="departid != null" >
        #{departid,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="duty != null" >
        #{duty,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="entrydate != null" >
        #{entrydate,jdbcType=DATE},
      </if>
      <if test="regularizationdate != null" >
        #{regularizationdate,jdbcType=DATE},
      </if>
      <if test="dimissiondate != null" >
        #{dimissiondate,jdbcType=DATE},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="custom1 != null" >
        #{custom1,jdbcType=VARCHAR},
      </if>
      <if test="custom2 != null" >
        #{custom2,jdbcType=VARCHAR},
      </if>
      <if test="custom3 != null" >
        #{custom3,jdbcType=VARCHAR},
      </if>
      <if test="custom4 != null" >
        #{custom4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.EmployeeExample" resultType="java.lang.Integer" >
    select count(*) from employee
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update employee
    <set >
      <if test="record.personid != null" >
        personID = #{record.personid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.englishname != null" >
        englishName = #{record.englishname,jdbcType=VARCHAR},
      </if>
      <if test="record.departid != null" >
        departID = #{record.departid,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null" >
        idCard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.duty != null" >
        duty = #{record.duty,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null" >
        postCode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.entrydate != null" >
        entryDate = #{record.entrydate,jdbcType=DATE},
      </if>
      <if test="record.regularizationdate != null" >
        regularizationdate = #{record.regularizationdate,jdbcType=DATE},
      </if>
      <if test="record.dimissiondate != null" >
        dimissiondate = #{record.dimissiondate,jdbcType=DATE},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.custom1 != null" >
        custom1 = #{record.custom1,jdbcType=VARCHAR},
      </if>
      <if test="record.custom2 != null" >
        custom2 = #{record.custom2,jdbcType=VARCHAR},
      </if>
      <if test="record.custom3 != null" >
        custom3 = #{record.custom3,jdbcType=VARCHAR},
      </if>
      <if test="record.custom4 != null" >
        custom4 = #{record.custom4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update employee
    set personID = #{record.personid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      englishName = #{record.englishname,jdbcType=VARCHAR},
      departID = #{record.departid,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      idCard = #{record.idcard,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      duty = #{record.duty,jdbcType=VARCHAR},
      postCode = #{record.postcode,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      entryDate = #{record.entrydate,jdbcType=DATE},
      regularizationdate = #{record.regularizationdate,jdbcType=DATE},
      dimissiondate = #{record.dimissiondate,jdbcType=DATE},
      address = #{record.address,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      custom1 = #{record.custom1,jdbcType=VARCHAR},
      custom2 = #{record.custom2,jdbcType=VARCHAR},
      custom3 = #{record.custom3,jdbcType=VARCHAR},
      custom4 = #{record.custom4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Employee" >
    update employee
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="englishname != null" >
        englishName = #{englishname,jdbcType=VARCHAR},
      </if>
      <if test="departid != null" >
        departID = #{departid,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="idcard != null" >
        idCard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="duty != null" >
        duty = #{duty,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postCode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="entrydate != null" >
        entryDate = #{entrydate,jdbcType=DATE},
      </if>
      <if test="regularizationdate != null" >
        regularizationdate = #{regularizationdate,jdbcType=DATE},
      </if>
      <if test="dimissiondate != null" >
        dimissiondate = #{dimissiondate,jdbcType=DATE},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="custom1 != null" >
        custom1 = #{custom1,jdbcType=VARCHAR},
      </if>
      <if test="custom2 != null" >
        custom2 = #{custom2,jdbcType=VARCHAR},
      </if>
      <if test="custom3 != null" >
        custom3 = #{custom3,jdbcType=VARCHAR},
      </if>
      <if test="custom4 != null" >
        custom4 = #{custom4,jdbcType=VARCHAR},
      </if>
    </set>
    where personID = #{personid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Employee" >
    update employee
    set name = #{name,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      englishName = #{englishname,jdbcType=VARCHAR},
      departID = #{departid,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      idCard = #{idcard,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      duty = #{duty,jdbcType=VARCHAR},
      postCode = #{postcode,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      entryDate = #{entrydate,jdbcType=DATE},
      regularizationdate = #{regularizationdate,jdbcType=DATE},
      dimissiondate = #{dimissiondate,jdbcType=DATE},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      custom1 = #{custom1,jdbcType=VARCHAR},
      custom2 = #{custom2,jdbcType=VARCHAR},
      custom3 = #{custom3,jdbcType=VARCHAR},
      custom4 = #{custom4,jdbcType=VARCHAR}
    where personID = #{personid,jdbcType=VARCHAR}
  </update>
</mapper>